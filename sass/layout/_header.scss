
/*............................*/
/*         header             */
/*............................*/

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)),
    url("../img/hero-small.jpg");
    background-size: cover;
    background-position: top;
    /*width: 2000px;*/

    /*for origin of the absolute position*/
    position: relative;

    /*for clip botton of the picture*/
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    // Now up until this point, we have only ever written media queries related to the screen, or the viewport width But
    // there are other types of media queries, and one of them is to target resolution.
    //Okay, so we can implement different styles not only depending on different viewport width, but also depending on
    //other things, such as the device resolution.
    //192 dots per inch because that's the resolution of the Apple retina screen.And so that's a high resolution screen.
    //and >>> how to combine multiple conditions in a media query.
    //, >>> like or
    //-webkit-min-device-pixel-ratio >>> it is for one the browser

    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
            only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
            only screen and (min-width: 125em) {
        background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)),
        url("../img/hero.jpg");
    }

    @include respond(phone) {
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);;
    }

    &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

    &__logo {
        /*set the height so width would be figured out by the browser*/
        height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        text-align: center;

    /*    translate the box relative to the its width and height*/
        transform: translate(-50%, -50%);
    }
}




